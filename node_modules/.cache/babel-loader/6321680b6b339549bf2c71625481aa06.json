{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicki\\\\Desktop\\\\Web development\\\\React-Proyect\\\\Fridgefy-Group2\\\\src\\\\AuthContext.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { auth } from './Backend/firebase_config';\nimport { Navigate } from 'react-router-dom';\nimport { signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuthContext = () => {\n  _s();\n\n  return useContext(AuthContext);\n};\n\n_s(useAuthContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nconst AuthProvider = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState('');\n  const [loading, setLoading] = useState(true); //Check if the user is logged in\n\n  useEffect(() => {\n    const unsubscribed = auth.onAuthStateChanged(user => {\n      setUser(user);\n      setLoading(false);\n    });\n    return () => {\n      unsubscribed();\n    };\n  }, []); //Sign in with Google\n\n  const googleProvider = new GoogleAuthProvider();\n\n  const loginWithGoogle = async e => {\n    e.preventDefault();\n    await signInWithPopup(auth, googleProvider);\n    let userData = auth.currentUser;\n    setUser(userData);\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 18\n    }, this);\n  };\n\n  const handleSignOut = () => {\n    auth.signOut();\n    alert(\"Successfully logged out\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loginWithGoogle,\n      googleProvider,\n      handleSignOut\n    },\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AuthProvider, \"sAb44Lf36od1rQNkXZ8Qjgp82H4=\");\n\n_c = AuthProvider;\nexport default AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","auth","Navigate","signInWithPopup","GoogleAuthProvider","AuthContext","useAuthContext","AuthProvider","children","user","setUser","loading","setLoading","unsubscribed","onAuthStateChanged","googleProvider","loginWithGoogle","e","preventDefault","userData","currentUser","handleSignOut","signOut","alert"],"sources":["C:/Users/nicki/Desktop/Web development/React-Proyect/Fridgefy-Group2/src/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react'\r\nimport { auth } from './Backend/firebase_config';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuthContext = () =>{\r\n    return useContext(AuthContext);\r\n}\r\n\r\nconst AuthProvider = ({children}) => {\r\n    const [user, setUser] = useState('');\r\n    const [loading, setLoading] = useState(true)\r\n\r\n\r\n    //Check if the user is logged in\r\n    useEffect(() =>{\r\n        const unsubscribed = auth.onAuthStateChanged((user) =>{\r\n            setUser(user)\r\n            setLoading(false)\r\n        });\r\n        return () => {\r\n            unsubscribed()\r\n        }\r\n    }, [])\r\n        //Sign in with Google\r\n        const googleProvider = new GoogleAuthProvider();\r\n        const loginWithGoogle = async (e) => {\r\n          e.preventDefault();\r\n          await signInWithPopup(auth, googleProvider);\r\n          let userData = auth.currentUser;\r\n          setUser(userData)\r\n          return <Navigate to=\"/\"></Navigate>;\r\n        };\r\n\r\n        const handleSignOut = () => {\r\n          auth.signOut();\r\n          alert(\"Successfully logged out\");\r\n        };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loginWithGoogle, googleProvider, handleSignOut }}>{!loading && children}</AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AuthProvider\r\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,UAAzC,EAAqDC,SAArD,QAAsE,OAAtE;AACA,SAASC,IAAT,QAAqB,2BAArB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,eAAT,EAA0BC,kBAA1B,QAAoD,eAApD;;AAEA,MAAMC,WAAW,gBAAGR,aAAa,EAAjC;AAEA,OAAO,MAAMS,cAAc,GAAG,MAAK;EAAA;;EAC/B,OAAOP,UAAU,CAACM,WAAD,CAAjB;AACH,CAFM;;GAAMC,c;;AAIb,MAAMC,YAAY,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EACjC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC,CAFiC,CAKjC;;EACAE,SAAS,CAAC,MAAK;IACX,MAAMa,YAAY,GAAGZ,IAAI,CAACa,kBAAL,CAAyBL,IAAD,IAAS;MAClDC,OAAO,CAACD,IAAD,CAAP;MACAG,UAAU,CAAC,KAAD,CAAV;IACH,CAHoB,CAArB;IAIA,OAAO,MAAM;MACTC,YAAY;IACf,CAFD;EAGH,CARQ,EAQN,EARM,CAAT,CANiC,CAe7B;;EACA,MAAME,cAAc,GAAG,IAAIX,kBAAJ,EAAvB;;EACA,MAAMY,eAAe,GAAG,MAAOC,CAAP,IAAa;IACnCA,CAAC,CAACC,cAAF;IACA,MAAMf,eAAe,CAACF,IAAD,EAAOc,cAAP,CAArB;IACA,IAAII,QAAQ,GAAGlB,IAAI,CAACmB,WAApB;IACAV,OAAO,CAACS,QAAD,CAAP;IACA,oBAAO,QAAC,QAAD;MAAU,EAAE,EAAC;IAAb;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CAND;;EAQA,MAAME,aAAa,GAAG,MAAM;IAC1BpB,IAAI,CAACqB,OAAL;IACAC,KAAK,CAAC,yBAAD,CAAL;EACD,CAHD;;EAKN,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAAEd,IAAF;MAAQO,eAAR;MAAyBD,cAAzB;MAAyCM;IAAzC,CAA7B;IAAA,UAAwF,CAACV,OAAD,IAAYH;EAApG;IAAA;IAAA;IAAA;EAAA,QADF;AAGD,CAjCD;;IAAMD,Y;;KAAAA,Y;AAmCN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}