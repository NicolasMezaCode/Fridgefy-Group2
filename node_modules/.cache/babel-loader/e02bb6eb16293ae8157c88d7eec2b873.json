{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicki\\\\Desktop\\\\Web development\\\\React-Proyect\\\\Fridgefy-Group2\\\\src\\\\Frontend\\\\Components\\\\RecipeContext.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport MyRecipes from \"./MyRecipes\";\nimport { onSnapshot } from \"firebase/firestore\";\nimport { dataBaseService } from '../../Backend/FirebaseUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RecipeContext = /*#__PURE__*/createContext();\nexport function RecipeProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [recipes, setRecipe] = useState([]);\n  const [myRecipes, setMyRecipes] = useState([]);\n  const [recipeModal, setRecipeModal] = useState([]);\n\n  const addRecipe = data => {\n    const recipes = Promise.resolve(data);\n    recipes.then(value => {\n      setRecipe(value);\n      console.log(value);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const getMyRecipes = () => {\n    dataBaseService.get().then(QuerySnapshot => {\n      setMyRecipes(QuerySnapshot.docs.map(doc => doc.data()));\n    });\n    console.log(myRecipes);\n  };\n\n  const addModal = summary => {\n    const sum = Promise.resolve(summary);\n    sum.then(value => {\n      recipeModal(value);\n      console.log(value);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const onTimeUpdate = ref => {\n    const updatedData = onSnapshot(ref, QuerySnapshot => {\n      setMyRecipes(QuerySnapshot.docs.map(doc => ({ ...doc.data()\n      })));\n    });\n    return updatedData;\n  };\n\n  return /*#__PURE__*/_jsxDEV(RecipeContext.Provider, {\n    value: {\n      recipes: recipes,\n      addRecipe,\n      myRecipes: myRecipes,\n      getMyRecipes,\n      onTimeUpdate,\n      addModal\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecipeProvider, \"vn3ijoRQxCAnlsfERy4afgzdkJs=\");\n\n_c = RecipeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeProvider\");","map":{"version":3,"names":["React","createContext","useState","MyRecipes","onSnapshot","dataBaseService","RecipeContext","RecipeProvider","children","recipes","setRecipe","myRecipes","setMyRecipes","recipeModal","setRecipeModal","addRecipe","data","Promise","resolve","then","value","console","log","catch","err","getMyRecipes","get","QuerySnapshot","docs","map","doc","addModal","summary","sum","onTimeUpdate","ref","updatedData"],"sources":["C:/Users/nicki/Desktop/Web development/React-Proyect/Fridgefy-Group2/src/Frontend/Components/RecipeContext.jsx"],"sourcesContent":["import React, { createContext, useState } from \"react\"\r\nimport MyRecipes from \"./MyRecipes\";\r\nimport { onSnapshot } from \"firebase/firestore\";\r\nimport { dataBaseService } from '../../Backend/FirebaseUtils';\r\n\r\nexport const RecipeContext=createContext();\r\n\r\nexport function RecipeProvider({children}){\r\n  const [recipes,setRecipe]=useState([])\r\n  const[myRecipes,setMyRecipes]=useState([])\r\n  const [recipeModal,setRecipeModal]=useState([])\r\n\r\n  const addRecipe=(data)=>{\r\n      const recipes=Promise.resolve(data)\r\n      recipes.then(value=>{\r\n        setRecipe(value)\r\n        console.log(value)\r\n      }).catch(err=>{\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const getMyRecipes=()=>{\r\n      dataBaseService.get().then((QuerySnapshot) =>{\r\n        setMyRecipes(QuerySnapshot.docs.map((doc) =>(doc.data())))\r\n    })\r\n    console.log(myRecipes)\r\n  }\r\n\r\n  const addModal=(summary)=>{\r\n    const sum=Promise.resolve(summary)\r\n      sum.then(value=>{\r\n        recipeModal(value)\r\n        console.log(value)\r\n      }).catch(err=>{\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const onTimeUpdate = (ref) =>{\r\n    const updatedData = onSnapshot(ref, (QuerySnapshot)=>{\r\n        setMyRecipes(\r\n            QuerySnapshot.docs.map((doc) => ({\r\n                ...doc.data(),\r\n            }))\r\n        )\r\n    })\r\n    return updatedData;\r\n}\r\n\r\n  return(\r\n    <RecipeContext.Provider value={{\r\n      recipes:recipes,addRecipe,myRecipes:myRecipes,getMyRecipes, onTimeUpdate,addModal\r\n    }}>\r\n        {children}\r\n    </RecipeContext.Provider>\r\n  )\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,eAAT,QAAgC,6BAAhC;;AAEA,OAAO,MAAMC,aAAa,gBAACL,aAAa,EAAjC;AAEP,OAAO,SAASM,cAAT,OAAmC;EAAA;;EAAA,IAAX;IAACC;EAAD,CAAW;EACxC,MAAM,CAACC,OAAD,EAASC,SAAT,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAK,CAACS,SAAD,EAAWC,YAAX,IAAyBV,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACW,WAAD,EAAaC,cAAb,IAA6BZ,QAAQ,CAAC,EAAD,CAA3C;;EAEA,MAAMa,SAAS,GAAEC,IAAD,IAAQ;IACpB,MAAMP,OAAO,GAACQ,OAAO,CAACC,OAAR,CAAgBF,IAAhB,CAAd;IACAP,OAAO,CAACU,IAAR,CAAaC,KAAK,IAAE;MAClBV,SAAS,CAACU,KAAD,CAAT;MACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD,CAHD,EAGGG,KAHH,CAGSC,GAAG,IAAE;MACZH,OAAO,CAACC,GAAR,CAAYE,GAAZ;IACD,CALD;EAMH,CARD;;EAUA,MAAMC,YAAY,GAAC,MAAI;IACnBpB,eAAe,CAACqB,GAAhB,GAAsBP,IAAtB,CAA4BQ,aAAD,IAAkB;MAC3Cf,YAAY,CAACe,aAAa,CAACC,IAAd,CAAmBC,GAAnB,CAAwBC,GAAD,IAASA,GAAG,CAACd,IAAJ,EAAhC,CAAD,CAAZ;IACH,CAFC;IAGFK,OAAO,CAACC,GAAR,CAAYX,SAAZ;EACD,CALD;;EAOA,MAAMoB,QAAQ,GAAEC,OAAD,IAAW;IACxB,MAAMC,GAAG,GAAChB,OAAO,CAACC,OAAR,CAAgBc,OAAhB,CAAV;IACEC,GAAG,CAACd,IAAJ,CAASC,KAAK,IAAE;MACdP,WAAW,CAACO,KAAD,CAAX;MACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD,CAHD,EAGGG,KAHH,CAGSC,GAAG,IAAE;MACZH,OAAO,CAACC,GAAR,CAAYE,GAAZ;IACD,CALD;EAMH,CARD;;EAUA,MAAMU,YAAY,GAAIC,GAAD,IAAQ;IAC3B,MAAMC,WAAW,GAAGhC,UAAU,CAAC+B,GAAD,EAAOR,aAAD,IAAiB;MACjDf,YAAY,CACRe,aAAa,CAACC,IAAd,CAAmBC,GAAnB,CAAwBC,GAAD,KAAU,EAC7B,GAAGA,GAAG,CAACd,IAAJ;MAD0B,CAAV,CAAvB,CADQ,CAAZ;IAKH,CAN6B,CAA9B;IAOA,OAAOoB,WAAP;EACH,CATC;;EAWA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAC7B3B,OAAO,EAACA,OADqB;MACbM,SADa;MACHJ,SAAS,EAACA,SADP;MACiBc,YADjB;MAC+BS,YAD/B;MAC4CH;IAD5C,CAA/B;IAAA,UAGKvB;EAHL;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GAlDeD,c;;KAAAA,c"},"metadata":{},"sourceType":"module"}